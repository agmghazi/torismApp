{"version":3,"sources":["./src/app/admin/admin-routing.module.ts","./src/app/guards/admin.guard.ts","./src/app/guards/auth.guard.ts","./src/app/admin/admin.module.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAE+B;AACvC;AACE;AAC2C;AACiB;AAGV;;;AAEnG,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;IACxD;QACE,IAAI,EAAE,oBAAoB;QAC1B,SAAS,EAAE,oGAAiB;QAC5B,WAAW,EAAE,CAAC,4DAAS,EAAE,8DAAU,CAAC;KACrC;IACD;QACE,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE,0GAAmB;QAC9B,WAAW,EAAE,CAAC,4DAAS,EAAE,8DAAU,CAAC;KACrC;IACD;QACE,IAAI,EAAE,0BAA0B;QAChC,SAAS,EAAE,2HAAwB;QACnC,WAAW,EAAE,CAAC,4DAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,oCAAoC;QAC1C,SAAS,EAAE,2JAAkC;QAC7C,WAAW,EAAE,CAAC,4DAAS,CAAC;KACzB;CACF,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;iGAAlB,kBAAkB;qGAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;;;;;;;;;;;;;AC7BxB;AAAA;AAAA;AAAA;AAAA;AAA8C;;;AAMvC,MAAM,UAAU;IACrB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAM1B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,2DAAS,CAAC,QAAQ,CAAC,CAAS,CAAC;QAC1E,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;YAC7D,OAAO,IAAI,CAAC;SACb;aAAM;YACL,YAAY,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACtC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;oEAnBU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAA8C;;;AAMvC,MAAM,SAAS;IACpB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAM1B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,2DAAS,CAAC,QAAQ,CAAC,CAAS,CAAC;QAC1E,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACzB,OAAO,IAAI,CAAC;SACb;aAAM;YACL,YAAY,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACtC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;kEAnBU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;ACZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEa;AACT;AACE;;AAa9C,MAAM,WAAW;;sEAAX,WAAW;0FAAX,WAAW;8FAPb;YACP,4DAAY;YACZ,wEAAkB;YAClB,kEAAmB;YACnB,kEAAY;SACb;mIAEU,WAAW,cANpB,4DAAY;QACZ,wEAAkB;QAClB,kEAAmB;QACnB,kEAAY","file":"admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {LoginComponent} from \"../auth/login/login.component\";\nimport {AllUsersComponent} from \"./components/identity/all-users/all-users.component\";\nimport {AuthGuard} from \"../guards/auth.guard\";\nimport {AdminGuard} from \"../guards/admin.guard\";\nimport {CreateUserComponent} from \"./components/identity/create-user/create-user.component\";\nimport {EditCurrentUserComponent} from \"./components/identity/edit-current-user/edit-current-user.component\";\nimport {\n  ChangePasswordCurrentUserComponent\n} from \"./components/identity/change-password-current-user/change-password-current-user.component\";\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'all-users', pathMatch: 'full' },\n  {\n    path: 'identity/all-users',\n    component: AllUsersComponent,\n    canActivate: [AuthGuard, AdminGuard],\n  },\n  {\n    path: 'identity/create-user',\n    component: CreateUserComponent,\n    canActivate: [AuthGuard, AdminGuard],\n  },\n  {\n    path: 'identity/EditCurrentUser',\n    component: EditCurrentUserComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'identity/ChangePasswordCurrentUser',\n    component: ChangePasswordCurrentUserComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import {Injectable} from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {Constants} from '../Helper/constants';\nimport {User} from '../models/identityModels/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    const user = JSON.parse(localStorage.getItem(Constants.USER_KEY)) as User;\n    if (user && user.userName && user.roles.indexOf('admin') > -1) {\n      return true;\n    } else {\n      localStorage.clear();\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {Constants} from '../Helper/constants';\nimport {User} from '../models/identityModels/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    const user = JSON.parse(localStorage.getItem(Constants.USER_KEY)) as User;\n    if (user && user.userName) {\n      return true;\n    } else {\n      localStorage.clear();\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {SharedModule} from \"../shared/shared.module\";\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class AdminModule { }\n"],"sourceRoot":"webpack:///"}