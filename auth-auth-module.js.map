{"version":3,"sources":["./src/app/auth/auth.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/auth.routes.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["\r\nimport { LayoutService } from '../shared/services/layout.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { authenticationRoutes } from './auth.routes';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport {SharedModule} from \"../shared/shared.module\";\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n    imports: [\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        RouterModule.forChild(authenticationRoutes),\r\n        SharedModule,\r\n    ],\r\n  providers: [LayoutService],\r\n})\r\nexport class AuthModule {}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AbstractControl, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from \"@angular/forms\";\r\nimport {LayoutService} from \"../../shared/services/layout.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {NgxUiLoaderService} from \"ngx-ui-loader\";\r\nimport {IdentitySecurityService} from \"../../services/identity-security.service\";\r\nimport {Constants} from \"../../Helper/constants\";\r\nimport {User} from \"../../models/identityModels/user\";\r\nimport {ResponseModel} from \"../../models/identityModels/responseModel\";\r\nimport {AddUpdateRegisterUserBindingModel} from \"../../models/identityModels/addUpdateRegisterUserBindingModel\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Title} from \"@angular/platform-browser\";\r\n\r\ntype UserFields = 'username' | 'password';\r\ntype FormErrors = { [u in UserFields]: string };\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  public registerForm: FormGroup;\r\n  public errorMessage: string;\r\n  addUpdateRegisterUserBindingModel: AddUpdateRegisterUserBindingModel\r\n  public formErrors: FormErrors = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private layoutService: LayoutService,\r\n    private router: Router,private titleService: Title,\r\n    private ngxLoader: NgxUiLoaderService,\r\n    private identitySecurity: IdentitySecurityService\r\n  ) {\r\n    this.registerForm = fb.group({\r\n      userName: ['', [Validators.required]],\r\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(100)])],\r\n      confirmPassword: ['', Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(100)])],\r\n    }, {validators: this.checkPasswords});\r\n    this.titleService.setTitle(\"تسجيل مستخدم جديد\");\r\n  }\r\n\r\n  checkPasswords: ValidatorFn = (group: AbstractControl): ValidationErrors | null => {\r\n    let pass = group.get('password').value;\r\n    let confirmPass = group.get('confirmPassword').value\r\n    return pass === confirmPass ? null : {notSame: true}\r\n  }\r\n\r\n  ngOnInit() {\r\n    localStorage.clear();\r\n    this.errorMessage = '';\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.ngxLoader.start();\r\n      this.addUpdateRegisterUserBindingModel = {\r\n        fullName: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        userName: this.registerForm.controls['userName'].value,\r\n        userJobType: \"\",\r\n        userJobCode: \"\",\r\n        password: this.registerForm.controls['password'].value,\r\n        confirmPassword: this.registerForm.controls['confirmPassword'].value,\r\n        roles: [\"user\"],\r\n      }\r\n      this.identitySecurity.RegisterUser(this.addUpdateRegisterUserBindingModel).subscribe((data: ResponseModel) => {\r\n        console.log(data)\r\n        if (data.responseCode == 1) {\r\n          Swal.fire({\r\n            title: ' تنبيه! ',\r\n            text: 'تم انشاء الحساب بنجاح',\r\n            icon: 'success',\r\n            confirmButtonText: 'حسنا'\r\n          }).then(() => {\r\n            let userName = this.registerForm.controls['userName'].value\r\n            let password = this.registerForm.controls['password'].value\r\n            this.login(userName, password)\r\n          })\r\n          this.ngxLoader.stop();\r\n        } else {\r\n          this.errorMessage = 'كلمه المرور او اسم المستخدم خطئ';\r\n          this.ngxLoader.stop();\r\n        }\r\n      }, (error) => {\r\n        this.ngxLoader.stop();\r\n        console.log('error', error);\r\n      });\r\n    }\r\n  }\r\n  goToAbsher(){\r\n    console.log('absher')\r\n  }\r\n  login(username, password) {\r\n    this.ngxLoader.start();\r\n    this.identitySecurity.login(username, password).subscribe((data: ResponseModel) => {\r\n      if (data.responseCode == 1) {\r\n        localStorage.setItem(Constants.USER_KEY, JSON.stringify(data.dateSet));\r\n        let user = data.dateSet as User;\r\n        this.ngxLoader.stop();\r\n        if (user)\r\n          this.router.navigate(['/client']);\r\n      } else {\r\n        this.errorMessage = 'كلمه المرور او اسم المستخدم خطئ';\r\n        this.ngxLoader.stop();\r\n      }\r\n    }, (error) => {\r\n      this.ngxLoader.stop();\r\n      console.log('error', error);\r\n    });\r\n  }\r\n}\r\n","<div class=\"signin-wrapper\">\r\n  <div class=\"signin-box\">\r\n    <div class=\"signin-box__brand\">\r\n      <img src=\"../../../assets/pngIcons/register.png\" alt=\"brand-image\" height=\"170\">\r\n\r\n    </div>\r\n    <div class=\"site-title mt-4\">\r\n\r\n      <h5>تسجيل مستخدم جديد</h5>\r\n    </div>\r\n    <div class=\"signin-box__form\">\r\n      <div *ngIf=\"this.errorMessage != null && this.errorMessage != ''\">\r\n        <div class=\"alert alert-danger\">\r\n          {{this.errorMessage}}\r\n        </div>\r\n      </div>\r\n      <form name=\"loginForm\" [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" novalidate>\r\n        <div class=\"form-group\">\r\n          <label for=\"userName\">اسم المستخدم</label>\r\n          <input type=\"text\" id=\"userName\" class=\"form-control\" formControlName=\"userName\" autofocus>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">كلمة المرور</label>\r\n          <input type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\">\r\n          <div class = \"alert alert-danger\" *ngIf=\"registerForm.get('confirmPassword').hasError('minlength')||registerForm.get('confirmPassword').hasError('maxlength')\">\r\n            <div *ngIf=\"registerForm.get('password').hasError('minlength')\" >يجب ان يكون عدد المدخل اكثر من ٦</div>\r\n            <div *ngIf=\"registerForm.get('password').hasError('maxlength')\" >يجب ان لا يتعدي المدخل عن ١٠٠</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"confirmPassword\">تاكيد كلمه المرور</label>\r\n          <input type=\"password\" id=\"confirmPassword\" class=\"form-control\" formControlName=\"confirmPassword\" [class.ng-invalid] = \"registerForm.hasError('notSame')\">\r\n          <div class = \"alert alert-danger\" *ngIf=\"registerForm.get('confirmPassword').hasError('minlength')||registerForm.get('confirmPassword').hasError('maxlength')||registerForm.hasError('notSame')\">\r\n            <div *ngIf=\"registerForm.get('confirmPassword').hasError('minlength')\" >يجب ان يكون عدد المدخل اكثر من ٦</div>\r\n            <div *ngIf=\"registerForm.get('confirmPassword').hasError('maxlength')\">يجب ان لا يتعدي المدخل عن ١٠٠</div>\r\n            <div *ngIf=\"registerForm.hasError('notSame')\" > يجب ان يتطابق كلمه المرور مع تاكيد كلمه المرور</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-action text-center\">\r\n          <button class=\"btn btn-primary\" [disabled]=\"registerForm.invalid\"  type=\"submit\">تسجيل</button>\r\n        </div>\r\n      </form>\r\n      <div class=\"mt-2 cursorPointer\" style=\"height: 126px !important;\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12 login-options\">\r\n            <a class=\"align-items-center d-flex pl-1 pr-1\" (click)=\"goToAbsher()\">\r\n              <div class=\"item-img border-left mb-2 ml-3\"> <img src=\"../../../assets/images/NIClogo.png\"  alt=\"logo\"></div>\r\n              <div class=\"item-content text-center\"><span class=\"title\">عن طريق حسابك في منصة النفاذ الوطني الموحد</span></div>\r\n            </a>\r\n          </div>\r\n          <div class=\"col\">\r\n            <a class=\"nav-link text-info cursorPointer\" routerLink=\"/auth/login\">\r\n              <app-feather-icons [icon]=\"'log-in'\" class=\"card-title text-primary aClass h6 cursorPointer\"\r\n              ></app-feather-icons>\r\n              <span class=\"linkNavUrl h6\">تسجيل دخول</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {FormBuilder, Validators, FormGroup} from '@angular/forms';\r\nimport {LayoutService} from '../../shared/services/layout.service';\r\nimport {NgxUiLoaderService} from 'ngx-ui-loader';\r\nimport {User} from 'src/app/models/identityModels/user';\r\nimport {Constants} from 'src/app/Helper/constants';\r\nimport {ResponseModel} from 'src/app/models/identityModels/responseModel';\r\nimport {IdentitySecurityService} from 'src/app/services/identity-security.service';\r\nimport {Title} from \"@angular/platform-browser\";\r\n\r\ntype UserFields = 'username' | 'password';\r\ntype FormErrors = { [u in UserFields]: string };\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm: FormGroup;\r\n  public errorMessage: string;\r\n  public formErrors: FormErrors = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private layoutService: LayoutService,\r\n    private router: Router,\r\n    private ngxLoader: NgxUiLoaderService,\r\n    private identitySecurity: IdentitySecurityService, private titleService: Title,\r\n  ) {\r\n    this.loginForm = fb.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', Validators.required],\r\n    });\r\n    this.titleService.setTitle(\"تسجيل الدخول\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    const currentUser = JSON.parse(localStorage.getItem(Constants.USER_KEY)) as User;\r\n    if (currentUser) {\r\n      this.redirectUser(currentUser);\r\n    }\r\n    localStorage.clear();\r\n    this.errorMessage = '';\r\n  }\r\n\r\n  login() {\r\n    if (this.loginForm.valid) {\r\n      this.ngxLoader.start();\r\n      let username = this.loginForm.controls['username'].value;\r\n      let password = this.loginForm.controls['password'].value;\r\n      this.identitySecurity.login(username, password).subscribe((data: ResponseModel) => {\r\n        if (data.responseCode == 1) {\r\n          localStorage.setItem(Constants.USER_KEY, JSON.stringify(data.dateSet));\r\n          let user = data.dateSet as User;\r\n          this.redirectUser(user);\r\n          this.ngxLoader.stop();\r\n        } else {\r\n          this.errorMessage = 'كلمه المرور او اسم المستخدم خطئ';\r\n          this.ngxLoader.stop();\r\n        }\r\n      }, (error) => {\r\n        this.ngxLoader.stop();\r\n        console.log('error', error);\r\n      });\r\n    }\r\n  }\r\n\r\n  redirectUser(user) {\r\n    if (user.roles.indexOf('admin') > -1) {\r\n      this.router.navigate(['/admin/panel/identity/all-users']);\r\n    } else {\r\n      this.redirectTo('/TourismApp/client')\r\n    }\r\n  }\r\n\r\n  redirectTo(url: string) {\r\n    window.open(url, \"_self\");\r\n  }\r\n}\r\n","<div class=\"signin-wrapper\">\r\n  <div class=\"signin-box\">\r\n    <div class=\"signin-box__brand\">\r\n      <img src=\"/assets/pngIcons/login.png\" alt=\"brand-image\">\r\n    </div>\r\n    <div class=\"site-title mt-4\">\r\n      <h5>منصة  المعالم السياحيه</h5>\r\n    </div>\r\n    <div class=\"signin-box__form\">\r\n      <div *ngIf=\"this.errorMessage != null && this.errorMessage != ''\">\r\n        <div class=\"alert alert-danger\">\r\n          {{this.errorMessage}}\r\n        </div>\r\n      </div>\r\n      <form name=\"loginForm\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" novalidate>\r\n        <div class=\"form-group\">\r\n          <label for=\"userName\">اسم المستخدم</label>\r\n          <input type=\"text\" id=\"username\" class=\"form-control\" formControlName=\"username\" autofocus>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">كلمة المرور</label>\r\n          <input type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\">\r\n        </div>\r\n        <div class=\"form-action text-center\">\r\n          <button class=\"btn btn-primary\" [disabled]=\"loginForm.invalid\" type=\"submit\">تسجيل الدخول</button>\r\n        </div>\r\n      </form>\r\n        <a class=\"nav-link text-info mt-4 cursorPointer\" routerLink=\"/auth/register\">\r\n        <app-feather-icons [icon]=\"'key'\" class=\"card-title text-primary aClass h6 cursorPointer\"\r\n        ></app-feather-icons>\r\n        <span class=\"linkNavUrl h6\">تسجيل مستخدم جديد</span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {LoginComponent} from './login/login.component';\r\nimport {Routes} from '@angular/router';\r\nimport {RegisterComponent} from \"./register/register.component\";\r\n\r\nexport const authenticationRoutes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n];\r\n"],"sourceRoot":"webpack:///"}